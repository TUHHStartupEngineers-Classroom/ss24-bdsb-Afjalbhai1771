{
  "hash": "efa341f3c64b33116d3158cc19d85a9b",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"01 Intro to the tidyverse\"\nauthor: \"Afjalbhai Harunbhai Gundigara\"\ndate: \"2024-05-20\"\noutput:\n  html_document:\n    toc: true\n    toc_float: true\n    df_print: paged\n    collapsed: false\n    number_sections: true\n    toc_depth: 3\n    code_folding: hide\n---\n\n\n\n\n# Tidyverse challenge solution\n\n# My first post\n\nLast compiled: 2024-05-20\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# 1.0 Load libraries ----\nlibrary(tidyverse)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\n```\n\n\n:::\n\n```{.r .cell-code}\nlibrary(readxl)\n# 2.0 Importing Files ----\nbikes_tbl      <- read_excel(path = \"C:/Users/afjal/OneDrive/Documents/GitHub/ss24-bdsb-Afjalbhai1771/ss24-bdsb-Afjalbhai1771/ds_data/01_bike_sales/01_raw_data/bikes.xlsx\")\norderlines_tbl <- read_excel(\"C:/Users/afjal/OneDrive/Documents/GitHub/ss24-bdsb-Afjalbhai1771/ss24-bdsb-Afjalbhai1771/ds_data/01_bike_sales/01_raw_data/orderlines.xlsx\")\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nNew names:\n• `` -> `...1`\n```\n\n\n:::\n\n```{.r .cell-code}\nbikeshops_tbl  <- read_excel(\"C:/Users/afjal/OneDrive/Documents/GitHub/ss24-bdsb-Afjalbhai1771/ss24-bdsb-Afjalbhai1771/ds_data/01_bike_sales/01_raw_data/bikeshops.xlsx\")\n# 3.0 Examining Data ----\norderlines_tbl\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 15,644 × 7\n   ...1  order.id order.line order.date          customer.id product.id quantity\n   <chr>    <dbl>      <dbl> <dttm>                    <dbl>      <dbl>    <dbl>\n 1 1            1          1 2015-01-07 00:00:00           2       2681        1\n 2 2            1          2 2015-01-07 00:00:00           2       2411        1\n 3 3            2          1 2015-01-10 00:00:00          10       2629        1\n 4 4            2          2 2015-01-10 00:00:00          10       2137        1\n 5 5            3          1 2015-01-10 00:00:00           6       2367        1\n 6 6            3          2 2015-01-10 00:00:00           6       1973        1\n 7 7            3          3 2015-01-10 00:00:00           6       2422        1\n 8 8            3          4 2015-01-10 00:00:00           6       2655        1\n 9 9            3          5 2015-01-10 00:00:00           6       2247        1\n10 10           4          1 2015-01-11 00:00:00          22       2408        1\n# ℹ 15,634 more rows\n```\n\n\n:::\n\n```{.r .cell-code}\nglimpse(orderlines_tbl)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nRows: 15,644\nColumns: 7\n$ ...1        <chr> \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\", \"11\", \"…\n$ order.id    <dbl> 1, 1, 2, 2, 3, 3, 3, 3, 3, 4, 5, 5, 5, 5, 6, 6, 6, 6, 7, 7…\n$ order.line  <dbl> 1, 2, 1, 2, 1, 2, 3, 4, 5, 1, 1, 2, 3, 4, 1, 2, 3, 4, 1, 2…\n$ order.date  <dttm> 2015-01-07, 2015-01-07, 2015-01-10, 2015-01-10, 2015-01-1…\n$ customer.id <dbl> 2, 2, 10, 10, 6, 6, 6, 6, 6, 22, 8, 8, 8, 8, 16, 16, 16, 1…\n$ product.id  <dbl> 2681, 2411, 2629, 2137, 2367, 1973, 2422, 2655, 2247, 2408…\n$ quantity    <dbl> 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1…\n```\n\n\n:::\n\n```{.r .cell-code}\n# 4.0 Joining Data ----\nbike_orderlines_joined_tbl <- orderlines_tbl %>%\n  left_join(bikes_tbl, by = c(\"product.id\" = \"bike.id\")) %>%\n  left_join(bikeshops_tbl, by = c(\"customer.id\" = \"bikeshop.id\"))\nbike_orderlines_joined_tbl %>% glimpse()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nRows: 15,644\nColumns: 19\n$ ...1           <chr> \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\", \"11\"…\n$ order.id       <dbl> 1, 1, 2, 2, 3, 3, 3, 3, 3, 4, 5, 5, 5, 5, 6, 6, 6, 6, 7…\n$ order.line     <dbl> 1, 2, 1, 2, 1, 2, 3, 4, 5, 1, 1, 2, 3, 4, 1, 2, 3, 4, 1…\n$ order.date     <dttm> 2015-01-07, 2015-01-07, 2015-01-10, 2015-01-10, 2015-0…\n$ customer.id    <dbl> 2, 2, 10, 10, 6, 6, 6, 6, 6, 22, 8, 8, 8, 8, 16, 16, 16…\n$ product.id     <dbl> 2681, 2411, 2629, 2137, 2367, 1973, 2422, 2655, 2247, 2…\n$ quantity       <dbl> 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1…\n$ model          <chr> \"Spectral CF 7 WMN\", \"Ultimate CF SLX Disc 8.0 ETAP\", \"…\n$ model.year     <dbl> 2021, 2020, 2021, 2019, 2020, 2020, 2020, 2021, 2020, 2…\n$ frame.material <chr> \"carbon\", \"carbon\", \"carbon\", \"carbon\", \"aluminium\", \"c…\n$ weight         <dbl> 13.80, 7.44, 14.06, 8.80, 11.50, 8.80, 8.20, 8.85, 14.4…\n$ price          <dbl> 3119, 5359, 2729, 1749, 1219, 1359, 2529, 1559, 3899, 6…\n$ category       <chr> \"Mountain - Trail - Spectral\", \"Road - Race - Ultimate\"…\n$ gender         <chr> \"female\", \"unisex\", \"unisex\", \"unisex\", \"unisex\", \"unis…\n$ url            <chr> \"https://www.canyon.com/en-de/mountain-bikes/trail-bike…\n$ name           <chr> \"AlexandeRad\", \"AlexandeRad\", \"WITT-RAD\", \"WITT-RAD\", \"…\n$ location       <chr> \"Hamburg, Hamburg\", \"Hamburg, Hamburg\", \"Bremen, Bremen…\n$ lat            <dbl> 53.57532, 53.57532, 53.07379, 53.07379, 48.78234, 48.78…\n$ lng            <dbl> 10.015340, 10.015340, 8.826754, 8.826754, 9.180819, 9.1…\n```\n\n\n:::\n\n```{.r .cell-code}\n# 5.0 Wrangling Data ----\nbike_orderlines_wrangled_tbl <- bike_orderlines_joined_tbl %>%\n  separate(col    = location,\n           into   = c(\"city\", \"state\"),\n           sep    = \",\") %>%\n  mutate(total.price = price * quantity) %>%\n  select(-...1, -gender) %>%\n  select(-ends_with(\".id\")) %>%\n  bind_cols(bike_orderlines_joined_tbl %>% select(order.id)) %>% \n  select(order.id, contains(\"order\"), contains(\"model\"), contains(\"category\"),\n         price, quantity, total.price,\n         everything()) %>%\n  rename(bikeshop = name) %>%\n  set_names(names(.) %>% str_replace_all(\"\\\\.\", \"_\"))\n# 6.0 Business Insights ----\n\n# 6.1 Sales by location ----\nlibrary(lubridate)\n# Step 1 - Manipulate\nsales_by_location_tbl <- bike_orderlines_wrangled_tbl %>%\n  \n  # Select columns\n  select(order_date, state, total_price) %>%\n  \n  # Add year column\n  mutate(year = year(order_date)) %>%\n  \n  # Grouping by year and summarizing sales\n  group_by(state) %>% \n  summarize(sales = sum(total_price)) %>%\n  \n  # Optional: Add a column that turns the numbers into a currency format \n  # (makes it in the plot optically more appealing)\n  # mutate(sales_text = scales::dollar(sales)) <- Works for dollar values\n  mutate(sales_text = scales::dollar(sales, big.mark = \".\", \n                                     decimal.mark = \",\", \n                                     prefix = \"\", \n                                     suffix = \" EUR\"))\n\nsales_by_location_tbl\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 12 × 3\n   state                               sales sales_text    \n   <chr>                               <dbl> <chr>         \n 1 \" Baden-Württemberg\"              6521090 6.521.090 EUR \n 2 \" Bavaria\"                        6742819 6.742.819 EUR \n 3 \" Berlin\"                         1128433 1.128.433 EUR \n 4 \" Bremen\"                        10653499 10.653.499 EUR\n 5 \" Hamburg\"                        3874756 3.874.756 EUR \n 6 \" Hesse\"                          1558901 1.558.901 EUR \n 7 \" Lower Saxony\"                   4107115 4.107.115 EUR \n 8 \" Mecklenburg-Western Pomerania\"   618974 618.974 EUR   \n 9 \" North Rhine-Westphalia\"        21200613 21.200.613 EUR\n10 \" Saxony\"                         2230245 2.230.245 EUR \n11 \" Saxony-Anhalt\"                   569614 569.614 EUR   \n12 \" Schleswig-Holstein\"             3224749 3.224.749 EUR \n```\n\n\n:::\n:::\n\n\n# Step 2 - Visualize\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsales_by_location_tbl %>%\n  \n  # Setup canvas with the columns year (x-axis) and sales (y-axis)\n  ggplot(aes(x = state, y = sales)) +\n  \n  # Geometries\n  geom_col(fill = \"#2DC6D6\") + # Use geom_col for a bar plot\n  geom_label(aes(label = sales_text)) + # Adding labels to the bars\n  geom_smooth(method = \"lm\", se = FALSE) + # Adding a trendline\n  \n  # Formatting\n  # scale_y_continuous(labels = scales::dollar) + # Change the y-axis. \n  # Again, we have to adjust it for euro values\n  scale_y_continuous(labels = scales::dollar_format(big.mark = \".\", \n                                                    decimal.mark = \",\", \n                                                    prefix = \"\", \n                                                    suffix = \" EUR\")) +\n  labs(\n    title    = \"Revenue by location\",\n    x = \"state\", # Override defaults for x and y\n    y = \"Revenue\"\n  )+ theme(axis.text.x = element_text(angle = 45, hjust = 1))\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n`geom_smooth()` using formula = 'y ~ x'\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](01_tidyverse_files/figure-html/plot-1.png){width=960}\n:::\n\n```{.r .cell-code}\n# 6.2 Sales by Year and location ----\n\n# Step 1 - Manipulate\nsales_by_year_location_tbl <- bike_orderlines_wrangled_tbl %>%\n  \n  # Select columns and add a year\n  select(order_date, total_price, state) %>%\n  mutate(year = year(order_date)) %>%\n  \n  # Group by and summarize year and main catgegory\n  group_by(year, state) %>%\n  summarise(sales = sum(total_price)) %>%\n  ungroup() %>%\n  \n  # Format $ Text\n  mutate(sales_text = scales::dollar(sales, big.mark = \".\", \n                                     decimal.mark = \",\", \n                                     prefix = \"\", \n                                     suffix = \" EUR\"))\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n`summarise()` has grouped output by 'year'. You can override using the\n`.groups` argument.\n```\n\n\n:::\n\n```{.r .cell-code}\nsales_by_year_location_tbl  \n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 60 × 4\n    year state                              sales sales_text   \n   <dbl> <chr>                              <dbl> <chr>        \n 1  2015 \" Baden-Württemberg\"             1031924 1.031.924 EUR\n 2  2015 \" Bavaria\"                       1301461 1.301.461 EUR\n 3  2015 \" Berlin\"                          95853 95.853 EUR   \n 4  2015 \" Bremen\"                        1395912 1.395.912 EUR\n 5  2015 \" Hamburg\"                        423090 423.090 EUR  \n 6  2015 \" Hesse\"                          308609 308.609 EUR  \n 7  2015 \" Lower Saxony\"                   584386 584.386 EUR  \n 8  2015 \" Mecklenburg-Western Pomerania\"  222003 222.003 EUR  \n 9  2015 \" North Rhine-Westphalia\"        3735092 3.735.092 EUR\n10  2015 \" Saxony\"                         238371 238.371 EUR  \n# ℹ 50 more rows\n```\n\n\n:::\n\n```{.r .cell-code}\n# Step 2 - Visualize\nsales_by_year_location_tbl %>%\n  \n  # Set up x, y, fill\n  ggplot(aes(x = year, y = sales, fill = state)) +\n  \n  # Geometries\n  geom_col() + # Run up to here to get a stacked bar plot\n  \n  # Facet\n  facet_wrap(~ state) +\n  \n  # Formatting\n  scale_y_continuous(labels = scales::dollar_format(big.mark = \".\", \n                                                    decimal.mark = \",\", \n                                                    prefix = \"\", \n                                                    suffix = \" EUR\")) +\n  labs(\n    title = \"Revenue by year and state\",\n    fill = \"state\" # Changes the legend name\n  )+ theme(axis.text.x = element_text(angle = 45, hjust = 1))\n```\n\n::: {.cell-output-display}\n![](01_tidyverse_files/figure-html/plot-2.png){width=960}\n:::\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}